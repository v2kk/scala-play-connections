play.http.secret.key = "jgaHauf8afaQl2vIayAGH8waHiq1UajKA"
play.filters.enabled=[]

play.server {
  http {
    port = 8810
  }
}

akka {
  akka.loggers = ["akka.event.Logging$DefaultLogger", "akka.event.slf4j.Slf4jLogger"]
  loglevel = WARNING
  actor {
    default-dispatcher = {
      fork-join-executor {
        parallelism-min = 8
        parallelism-factor = 1.0
        parallelism-max = 16
      }
      throughput = 16
    }

    redis-context {
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 64
        parallelism-factor = 64.0
        parallelism-max = 1024
        task-peeking-mode = "FIFO"
      }
    }

    blocking-context {
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 8
        parallelism-factor = 1.0
        parallelism-max = 16
      }
      throughput = 16
    }
  }
}

akka.http {

  server {
    server-header = akka-http/${akka.http.version}
    preview {
      enable-http2 = off
    }
    idle-timeout = 60 s
    request-timeout = 20 s
    bind-timeout = 1s
    linger-timeout = 1 min

    max-connections = 4096
    pipelining-limit = 512

    remote-address-header = off
    raw-request-uri-header = off
    transparent-head-requests = on
    verbose-error-messages = off
    response-header-size-hint = 512

    backlog = 1024

    default-host-header = ""

    socket-options {
      so-receive-buffer-size = undefined
      so-send-buffer-size = undefined
      so-reuse-address = undefined
      so-traffic-class = undefined
      tcp-keep-alive = undefined
      tcp-oob-inline = undefined
      tcp-no-delay = undefined
    }

    log-unencrypted-network-bytes = off
  }

  client {
    user-agent-header = akka-http/${akka.http.version}
    connecting-timeout = 10s
    idle-timeout = 60 s
    request-header-size-hint = 512

    socket-options {
      so-receive-buffer-size = undefined
      so-send-buffer-size = undefined
      so-reuse-address = undefined
      so-traffic-class = undefined
      tcp-keep-alive = undefined
      tcp-oob-inline = undefined
      tcp-no-delay = undefined
    }

    log-unencrypted-network-bytes = off
  }
}


redis {
  // item db host
  db01: {
    host: 172.27.11.154
    port: 6379
  }
  // tv db host
  db02: {
    host: 172.27.11.155
    port: 6380
  }
  // item cache host
  cache01: {
    host: 172.27.11.155
    port: 6379
  }
  // stats host
  stats01: {
    host: 172.27.11.154
    port: 6380
  }
}